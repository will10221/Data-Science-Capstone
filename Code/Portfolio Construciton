{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPKAw8ijrCiiJkSpiVyjeVk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","```\n","# This is formatted as code\n","```\n","\n","#**Sentiment Analysis**\n","### **Prepared by: Alex Cole, William Bailey, Chris Cline, and Rachael Poraino**\n","\n","### **Course**: MATH 479\n"],"metadata":{"id":"_i8VTLl2kQne"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"b7cuLZoJDBxZ","executionInfo":{"status":"ok","timestamp":1682456910254,"user_tz":240,"elapsed":19666,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"34d563e9-dcfe-4c07-e214-78ac60d3a6c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import yfinance as yf\n","from pandas_datareader import data as wb\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import scipy.optimize as sco\n","from google.colab import files\n","from google.colab import drive\n","\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["tickers = ['AAPL','MSFT','AMZN','BRKB','NVDA','TSLA','GOOG','XOM','UNH',\n","          'JPM','JNJ','META','V','HD','PG','MA','CVX','MRK','ABBV','LLY','BAC','AVGO',\n","          'PEP','PFE','KO','COST','TMO','CSCO','WMT','MCD','DIS','ABT','WFC','ACN','CMCSA',\n","          'ADBE','CRM','DHR','VZ','TXN','LIN','NKE','NFLX','PM','BMY','NEE','RTX','QCOM','T']\n","\n","pred_dir_path = \"/content/drive/MyDrive/Project_Group2/LSTM_Results/\"\n","close_dir_path = \"/content/drive/MyDrive/Project_Group2/Technicals/\""],"metadata":{"id":"qGbkWzfuPgNu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d = {}\n","five_day_mean_pred = pd.DataFrame()\n","pred_returns = pd.DataFrame()\n","\n","for ticker in tickers:\n","  data = pd.DataFrame()\n","  pred_data = pd.DataFrame()\n","\n","  data['date'] = pd.read_csv(close_dir_path+ticker+'_tecnicals.csv')['Date']\n","  data['close'] = pd.read_csv(close_dir_path+ticker+'_tecnicals.csv')['close']\n","  data = data[-191:]\n","  data.reset_index(drop=True, inplace=True)\n","  pred_data['pred'] = pd.read_csv(pred_dir_path+ticker+\"/best-lstm-[100]-test_predictions.csv\")['0']\n","  data = pd.concat([data, pred_data], axis=1)\n","  data.set_index('date',drop=True, inplace=True)\n","  df = data.pct_change(periods=1)\n","  data['actual_change'] = df['close']\n","  data['pred_change'] = df['pred']\n","  data['pred_rolling_5'] = data['pred_change'].rolling(5).mean()\n","\n","  d[ticker] = data\n","\n","  pred_returns[ticker] = data['pred_change']\n","  five_day_mean_pred[ticker] = data['pred_change'].rolling(5).mean()\n","\n","pred_returns = pred_returns[1:]\n","pred_returns.reset_index(drop=True, inplace=True)\n","five_day_mean_pred = five_day_mean_pred[5:]\n","five_day_mean_pred.reset_index(drop=True, inplace=True)"],"metadata":{"id":"L1x7O9FWPvUo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pred_returns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"tz1Qf9-FQd6H","executionInfo":{"status":"ok","timestamp":1682461702018,"user_tz":240,"elapsed":177,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"6baa1a64-0a4f-4d61-d547-1808c519e19b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         AAPL      MSFT      AMZN      BRKB      NVDA      TSLA      GOOG  \\\n","0    0.001021 -0.001106  0.000723  0.000485  0.003964  0.006939  0.002109   \n","1    0.000222  0.004803  0.003749  0.002149  0.010759  0.001201  0.004524   \n","2    0.003094  0.009141  0.005619  0.004030  0.016891  0.014806  0.008164   \n","3    0.005427  0.005839  0.005222  0.002875  0.005397  0.008287  0.006841   \n","4    0.005559  0.006115  0.006070  0.002527  0.003697 -0.002583  0.007126   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","185  0.004924  0.000403 -0.002319  0.002592 -0.004177  0.002264 -0.000693   \n","186  0.003568 -0.000931 -0.002279  0.003240 -0.004863  0.003475 -0.001257   \n","187  0.005958  0.002452 -0.002624  0.002563 -0.000125  0.003751 -0.001107   \n","188  0.005015  0.001721 -0.001767  0.003098 -0.001993 -0.001041  0.000169   \n","189  0.004841  0.001814 -0.002040  0.003265 -0.003054  0.000649  0.001117   \n","\n","          XOM       UNH       JPM  ...       TXN       LIN       NKE  \\\n","0   -0.002359  0.004631  0.000658  ...  0.006351  0.005068 -0.001819   \n","1    0.001017  0.002893  0.001007  ...  0.008321  0.005289 -0.001854   \n","2   -0.001884  0.003212  0.001104  ...  0.010647  0.007004  0.001391   \n","3   -0.002828  0.000233  0.000112  ...  0.008144  0.005768  0.002893   \n","4   -0.002466  0.001294  0.001735  ...  0.007386  0.003843  0.001505   \n","..        ...       ...       ...  ...       ...       ...       ...   \n","185 -0.000695  0.001199 -0.002838  ... -0.001822  0.001757  0.000422   \n","186 -0.001000  0.006738 -0.003536  ... -0.001406  0.001855 -0.000179   \n","187  0.000476  0.001914 -0.002296  ...  0.001219  0.003128 -0.000345   \n","188  0.000185  0.007500 -0.001363  ...  0.000320  0.002955 -0.000588   \n","189 -0.000512  0.005922 -0.001018  ... -0.000038  0.003207 -0.001711   \n","\n","         NFLX        PM       BMY       NEE       RTX      QCOM         T  \n","0    0.000483  0.001099  0.001743  0.009107  0.000701 -0.000104  0.003096  \n","1    0.004805  0.000353  0.001732  0.002255  0.001178  0.005229  0.001157  \n","2    0.003967  0.001024  0.002517  0.003581  0.002453  0.007006  0.004712  \n","3    0.003974 -0.000029  0.000275  0.004645  0.001539  0.004239  0.003562  \n","4    0.003686  0.001171  0.000902  0.003755  0.001918  0.005011  0.002121  \n","..        ...       ...       ...       ...       ...       ...       ...  \n","185 -0.003290  0.003161  0.005999  0.001625 -0.001791  0.000466  0.000105  \n","186 -0.004106  0.002673  0.005873  0.000978 -0.000896  0.001404  0.002912  \n","187 -0.003180  0.003371  0.006396  0.003094  0.000135  0.002374  0.004292  \n","188 -0.003354  0.002497  0.006812  0.002491  0.002169  0.001837  0.006227  \n","189 -0.002686  0.002851  0.006777  0.002646  0.002897  0.001597  0.005771  \n","\n","[190 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-29732bdc-a82a-4a59-8bc3-bb365362f94a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>MSFT</th>\n","      <th>AMZN</th>\n","      <th>BRKB</th>\n","      <th>NVDA</th>\n","      <th>TSLA</th>\n","      <th>GOOG</th>\n","      <th>XOM</th>\n","      <th>UNH</th>\n","      <th>JPM</th>\n","      <th>...</th>\n","      <th>TXN</th>\n","      <th>LIN</th>\n","      <th>NKE</th>\n","      <th>NFLX</th>\n","      <th>PM</th>\n","      <th>BMY</th>\n","      <th>NEE</th>\n","      <th>RTX</th>\n","      <th>QCOM</th>\n","      <th>T</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.001021</td>\n","      <td>-0.001106</td>\n","      <td>0.000723</td>\n","      <td>0.000485</td>\n","      <td>0.003964</td>\n","      <td>0.006939</td>\n","      <td>0.002109</td>\n","      <td>-0.002359</td>\n","      <td>0.004631</td>\n","      <td>0.000658</td>\n","      <td>...</td>\n","      <td>0.006351</td>\n","      <td>0.005068</td>\n","      <td>-0.001819</td>\n","      <td>0.000483</td>\n","      <td>0.001099</td>\n","      <td>0.001743</td>\n","      <td>0.009107</td>\n","      <td>0.000701</td>\n","      <td>-0.000104</td>\n","      <td>0.003096</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000222</td>\n","      <td>0.004803</td>\n","      <td>0.003749</td>\n","      <td>0.002149</td>\n","      <td>0.010759</td>\n","      <td>0.001201</td>\n","      <td>0.004524</td>\n","      <td>0.001017</td>\n","      <td>0.002893</td>\n","      <td>0.001007</td>\n","      <td>...</td>\n","      <td>0.008321</td>\n","      <td>0.005289</td>\n","      <td>-0.001854</td>\n","      <td>0.004805</td>\n","      <td>0.000353</td>\n","      <td>0.001732</td>\n","      <td>0.002255</td>\n","      <td>0.001178</td>\n","      <td>0.005229</td>\n","      <td>0.001157</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.003094</td>\n","      <td>0.009141</td>\n","      <td>0.005619</td>\n","      <td>0.004030</td>\n","      <td>0.016891</td>\n","      <td>0.014806</td>\n","      <td>0.008164</td>\n","      <td>-0.001884</td>\n","      <td>0.003212</td>\n","      <td>0.001104</td>\n","      <td>...</td>\n","      <td>0.010647</td>\n","      <td>0.007004</td>\n","      <td>0.001391</td>\n","      <td>0.003967</td>\n","      <td>0.001024</td>\n","      <td>0.002517</td>\n","      <td>0.003581</td>\n","      <td>0.002453</td>\n","      <td>0.007006</td>\n","      <td>0.004712</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.005427</td>\n","      <td>0.005839</td>\n","      <td>0.005222</td>\n","      <td>0.002875</td>\n","      <td>0.005397</td>\n","      <td>0.008287</td>\n","      <td>0.006841</td>\n","      <td>-0.002828</td>\n","      <td>0.000233</td>\n","      <td>0.000112</td>\n","      <td>...</td>\n","      <td>0.008144</td>\n","      <td>0.005768</td>\n","      <td>0.002893</td>\n","      <td>0.003974</td>\n","      <td>-0.000029</td>\n","      <td>0.000275</td>\n","      <td>0.004645</td>\n","      <td>0.001539</td>\n","      <td>0.004239</td>\n","      <td>0.003562</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.005559</td>\n","      <td>0.006115</td>\n","      <td>0.006070</td>\n","      <td>0.002527</td>\n","      <td>0.003697</td>\n","      <td>-0.002583</td>\n","      <td>0.007126</td>\n","      <td>-0.002466</td>\n","      <td>0.001294</td>\n","      <td>0.001735</td>\n","      <td>...</td>\n","      <td>0.007386</td>\n","      <td>0.003843</td>\n","      <td>0.001505</td>\n","      <td>0.003686</td>\n","      <td>0.001171</td>\n","      <td>0.000902</td>\n","      <td>0.003755</td>\n","      <td>0.001918</td>\n","      <td>0.005011</td>\n","      <td>0.002121</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>0.004924</td>\n","      <td>0.000403</td>\n","      <td>-0.002319</td>\n","      <td>0.002592</td>\n","      <td>-0.004177</td>\n","      <td>0.002264</td>\n","      <td>-0.000693</td>\n","      <td>-0.000695</td>\n","      <td>0.001199</td>\n","      <td>-0.002838</td>\n","      <td>...</td>\n","      <td>-0.001822</td>\n","      <td>0.001757</td>\n","      <td>0.000422</td>\n","      <td>-0.003290</td>\n","      <td>0.003161</td>\n","      <td>0.005999</td>\n","      <td>0.001625</td>\n","      <td>-0.001791</td>\n","      <td>0.000466</td>\n","      <td>0.000105</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>0.003568</td>\n","      <td>-0.000931</td>\n","      <td>-0.002279</td>\n","      <td>0.003240</td>\n","      <td>-0.004863</td>\n","      <td>0.003475</td>\n","      <td>-0.001257</td>\n","      <td>-0.001000</td>\n","      <td>0.006738</td>\n","      <td>-0.003536</td>\n","      <td>...</td>\n","      <td>-0.001406</td>\n","      <td>0.001855</td>\n","      <td>-0.000179</td>\n","      <td>-0.004106</td>\n","      <td>0.002673</td>\n","      <td>0.005873</td>\n","      <td>0.000978</td>\n","      <td>-0.000896</td>\n","      <td>0.001404</td>\n","      <td>0.002912</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>0.005958</td>\n","      <td>0.002452</td>\n","      <td>-0.002624</td>\n","      <td>0.002563</td>\n","      <td>-0.000125</td>\n","      <td>0.003751</td>\n","      <td>-0.001107</td>\n","      <td>0.000476</td>\n","      <td>0.001914</td>\n","      <td>-0.002296</td>\n","      <td>...</td>\n","      <td>0.001219</td>\n","      <td>0.003128</td>\n","      <td>-0.000345</td>\n","      <td>-0.003180</td>\n","      <td>0.003371</td>\n","      <td>0.006396</td>\n","      <td>0.003094</td>\n","      <td>0.000135</td>\n","      <td>0.002374</td>\n","      <td>0.004292</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>0.005015</td>\n","      <td>0.001721</td>\n","      <td>-0.001767</td>\n","      <td>0.003098</td>\n","      <td>-0.001993</td>\n","      <td>-0.001041</td>\n","      <td>0.000169</td>\n","      <td>0.000185</td>\n","      <td>0.007500</td>\n","      <td>-0.001363</td>\n","      <td>...</td>\n","      <td>0.000320</td>\n","      <td>0.002955</td>\n","      <td>-0.000588</td>\n","      <td>-0.003354</td>\n","      <td>0.002497</td>\n","      <td>0.006812</td>\n","      <td>0.002491</td>\n","      <td>0.002169</td>\n","      <td>0.001837</td>\n","      <td>0.006227</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>0.004841</td>\n","      <td>0.001814</td>\n","      <td>-0.002040</td>\n","      <td>0.003265</td>\n","      <td>-0.003054</td>\n","      <td>0.000649</td>\n","      <td>0.001117</td>\n","      <td>-0.000512</td>\n","      <td>0.005922</td>\n","      <td>-0.001018</td>\n","      <td>...</td>\n","      <td>-0.000038</td>\n","      <td>0.003207</td>\n","      <td>-0.001711</td>\n","      <td>-0.002686</td>\n","      <td>0.002851</td>\n","      <td>0.006777</td>\n","      <td>0.002646</td>\n","      <td>0.002897</td>\n","      <td>0.001597</td>\n","      <td>0.005771</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>190 rows × 49 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29732bdc-a82a-4a59-8bc3-bb365362f94a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29732bdc-a82a-4a59-8bc3-bb365362f94a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29732bdc-a82a-4a59-8bc3-bb365362f94a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":226}]},{"cell_type":"code","source":["# Creating a list of Stock Tickers\n","pf_data = pd.DataFrame()\n","\n","stocks = tickers\n","for stock in stocks:\n","  pf_data[stock] = data['pred']\n","\n","pf_data.reset_index(drop=True, inplace=True)\n","num_stocks = len(stocks)"],"metadata":{"id":"HDGrxAK8YEkG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Creating a list of Stock Tickers\n","stocks = ['HSBC','JPM','TSLA','WMT','AMZN','COST']\n","pf_data = pd.DataFrame()\n","\n","# Pulling closing price   \n","for stock in stocks:\n","  pf_data[stock] = yf.download(stock, start='2018-1-1', end = \"2019-1-1\", interval=\"1d\")['Adj Close']\n","\n","num_stocks = len(stocks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AD4PQcK7DD1a","executionInfo":{"status":"ok","timestamp":1682457448087,"user_tz":240,"elapsed":851,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"dbb1c5a2-1b6f-40e9-f096-06867e66f205"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["def portfolio_annualised_performance(weights, mean_returns, cov_matrix):\n","  returns = np.sum(mean_returns*weights)*252\n","  std = np.sqrt(np.dot(weights.T, np.dot(cov_matrix, weights))) * np.sqrt(252)\n","  return std, returns\n","\n","def random_portfolios(num_portfolios, mean_returns, cov_matrix, risk_free_rate):\n","  results = np.zeros((3,num_portfolios))\n","  weights_record = []\n","  for i in range(num_portfolios):\n","    weights = np.random.random(len(stocks) )\n","    weights /= np.sum(weights)\n","    weights_record.append(weights)\n","    portfolio_std_dev, portfolio_return = portfolio_annualised_performance(weights, mean_returns, cov_matrix)\n","    results[0,i] = portfolio_std_dev\n","    results[1,i] = portfolio_return\n","    results[2,i] = (portfolio_return - risk_free_rate) / portfolio_std_dev\n","  return results, weights_record\n","\n","def neg_sharpe_ratio(weights, mean_returns, cov_matrix, risk_free_rate):\n","  p_var, p_ret = portfolio_annualised_performance(weights, mean_returns, cov_matrix)\n","  return -(p_ret - risk_free_rate) / p_var\n","  \n","def max_sharpe_ratio(mean_returns, cov_matrix, risk_free_rate):\n","  num_assets = len(mean_returns)\n","  args = (mean_returns, cov_matrix, risk_free_rate)\n","  constraints = ({'type': 'eq', 'fun': lambda x: np.sum(x) - 1})\n","  bound = (0.0,1.0)\n","  bounds = tuple(bound for asset in range(num_assets))\n","  result = sco.minimize(neg_sharpe_ratio, num_assets*[1./num_assets,], args=args, method='SLSQP', bounds=bounds, constraints=constraints)\n","  return result\n","  \n","def portfolio_volatility(weights, mean_returns, cov_matrix):\n","  return portfolio_annualised_performance(weights, mean_returns, cov_matrix)[0]\n","  \n","def min_variance(mean_returns, cov_matrix):\n","  num_assets = len(mean_returns)\n","  args = (mean_returns, cov_matrix)\n","  constraints = ({'type': 'eq', 'fun': lambda x: np.sum(x) - 1})\n","  bound = (0.0,1.0)\n","  bounds = tuple(bound for asset in range(num_assets))\n","  result = sco.minimize(portfolio_volatility, num_assets*[1./num_assets,], args=args, method='SLSQP', bounds=bounds, constraints=constraints)\n","  return result\n","\n","def efficient_return(mean_returns, cov_matrix, target):\n","  num_assets = len(mean_returns)\n","  args = (mean_returns, cov_matrix)\n","  \n","def portfolio_return(weights):\n","  return portfolio_annualised_performance(weights, mean_returns, cov_matrix)[1]\n","  constraints = ({'type': 'eq', 'fun': lambda x: portfolio_return(x) - target}, {'type': 'eq', 'fun': lambda x: np.sum(x) - 1})\n","  bounds = tuple((0,1) for asset in range(num_assets))\n","  result = sco.minimize(portfolio_volatility, num_assets*[1./num_assets,], args=args, method='SLSQP', bounds=bounds, constraints=constraints)\n","  return result\n","  \n","def efficient_frontier(mean_returns, cov_matrix, returns_range):\n","  efficients = []\n","  for ret in returns_range:\n","    efficients.append(efficient_return(mean_returns, cov_matrix, ret))\n","  return efficients\n","  \n","def display_simulated_ef_with_random(mean_returns, cov_matrix, num_portfolios, risk_free_rate):\n","  results, weights = random_portfolios(num_portfolios,mean_returns, cov_matrix, risk_free_rate)\n","\n","  max_sharpe_idx = np.argmax(results[2])\n","  sdp, rp = results[0,max_sharpe_idx], results[1,max_sharpe_idx]\n","  global max_sharpe_allocation\n","  max_sharpe_allocation = pd.DataFrame(weights[max_sharpe_idx],index=pf_data.columns,columns=['allocation'])\n","  max_sharpe_allocation.allocation = [round(i*100,2)for i in max_sharpe_allocation.allocation]\n","  max_sharpe_allocation = max_sharpe_allocation.T\n","\n","  min_vol_idx = np.argmin(results[0])\n","  sdp_min, rp_min = results[0,min_vol_idx], results[1,min_vol_idx]\n","  min_vol_allocation = pd.DataFrame(weights[min_vol_idx],index=pf_data.columns,columns=['allocation'])\n","  min_vol_allocation.allocation = [round(i*100,2)for i in min_vol_allocation.allocation]\n","  min_vol_allocation = min_vol_allocation.T\n","\n","  # print (\"-\"*80)\n","  # print (\"Maximum Sharpe Ratio Portfolio Allocation\\n\")\n","  # print (\"Annualised Return:\", round(rp,2))\n","  # print (\"Annualised Volatility:\", round(sdp,2))\n","  # print (\"\\n\")\n","  # print (max_sharpe_allocation)\n","  # print (\"-\"*80)\n","  # print (\"Minimum Volatility Portfolio Allocation\\n\")\n","  # print (\"Annualised Return:\", round(rp_min,2))\n","  # print (\"Annualised Volatility:\", round(sdp_min,2))\n","  # print (\"\\n\")\n","  # print (min_vol_allocation)\n","\n","  # plt.figure(figsize=(10, 7))\n","\n","  # plt.scatter(results[0,:],results[1,:],c=results[2,:],cmap='YlGnBu', marker='o', s=10, alpha=0.3)\n","  # plt.colorbar()\n","  # plt.scatter(sdp,rp,marker='*',color='r',s=500, label='Maximum Sharpe ratio')\n","  # plt.scatter(sdp_min,rp_min,marker='*',color='g',s=500, label='Minimum volatility')\n","  # plt.title('Simulated Portfolio Optimization based on Efficient Frontier')\n","  # plt.xlabel('Annualised Volatility')\n","  # plt.ylabel('Annualised Returns')\n","  # plt.legend(labelspacing = 0.8)\n","\n","def display_calculated_ef_with_random(mean_returns, cov_matrix, num_portfolios, risk_free_rate):\n","  results, _ = random_portfolios(num_portfolios,mean_returns, cov_matrix, risk_free_rate)\n","\n","  max_sharpe = max_sharpe_ratio(mean_returns, cov_matrix, risk_free_rate)\n","  sdp, rp = portfolio_annualised_performance(max_sharpe['x'], mean_returns, cov_matrix)\n","  global max_sharpe_allocation\n","  max_sharpe_allocation = pd.DataFrame(max_sharpe.x,index=pf_data.columns,columns=['allocation'])\n","  max_sharpe_allocation.allocation = [round(i*100,2)for i in max_sharpe_allocation.allocation]\n","  max_sharpe_allocation = max_sharpe_allocation.T\n","\n","  min_vol = min_variance(mean_returns, cov_matrix)\n","  sdp_min, rp_min = portfolio_annualised_performance(min_vol['x'], mean_returns, cov_matrix)\n","  min_vol_allocation = pd.DataFrame(min_vol.x,index=pf_data.columns,columns=['allocation'])\n","  min_vol_allocation.allocation = [round(i*100,2)for i in min_vol_allocation.allocation]\n","  min_vol_allocation = min_vol_allocation.T\n","\n","  print (\"-\"*80)\n","  print (\"Maximum Sharpe Ratio Portfolio Allocation\\n\")\n","  print (\"Annualised Return:\", round(rp,2))\n","  print (\"Annualised Volatility:\", round(sdp,2))\n","  print (\"\\n\")\n","  print (max_sharpe_allocation)\n","  print (\"-\"*80)\n","  print (\"Minimum Volatility Portfolio Allocation\\n\")\n","  print (\"Annualised Return:\", round(rp_min,2))\n","  print (\"Annualised Volatility:\", round(sdp_min,2))\n","  print (\"\\n\")\n","  print (min_vol_allocation)\n","\n","  plt.figure(figsize=(10, 7))\n","\n","  plt.scatter(results[0,:],results[1,:],c=results[2,:],cmap='YlGnBu', marker='o', s=10, alpha=0.3)\n","  plt.colorbar()\n","  plt.scatter(sdp,rp,marker='*',color='r',s=500, label='Maximum Sharpe ratio')\n","  plt.scatter(sdp_min,rp_min,marker='*',color='g',s=500, label='Minimum volatility')\n","  target = np.linspace(rp_min, 0.40, 50)\n","  efficient_portfolios = efficient_frontier(mean_returns, cov_matrix, target)\n","  plt.plot([p['fun'] for p in efficient_portfolios], target, linestyle='-.', color='black', label='efficient frontier')\n","  plt.title('Calculated Portfolio Optimization based on Efficient Frontier')\n","  plt.xlabel('Annualised Volatility')\n","  plt.ylabel('Annualised Returns')\n","  plt.legend(labelspacing = 0.8)"],"metadata":{"id":"cmyCQwGGDJOp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["returns = pred_returns\n","#mean_returns = five_day_mean_pred.iloc[0]\n","cov_matrix = pred_returns.cov()\n","num_portfolios = 10000\n","risk_free_rate = 0.03481\n"],"metadata":{"id":"bDV2O2o6EL1Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["weights = pd.DataFrame()\n","\n","for i in range(189):\n","  mean_returns = five_day_mean_pred.iloc[i]\n","  display_simulated_ef_with_random(mean_returns, cov_matrix, num_portfolios, risk_free_rate)\n","  weights = pd.concat([weights, max_sharpe_allocation], ignore_index=True)\n","  print(i)\n","\n","weights "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"id":"sXZO6b-ElJ1J","executionInfo":{"status":"error","timestamp":1682464657039,"user_tz":240,"elapsed":7821,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"10a6b305-7363-4526-ed6e-cec297eb02f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-285-f84b9a605e72>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m189\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mmean_returns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfive_day_mean_pred\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m   \u001b[0mdisplay_simulated_ef_with_random\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmean_returns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcov_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_portfolios\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrisk_free_rate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m   \u001b[0mweights\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_sharpe_allocation\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mignore_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-266-f9dae82c288b>\u001b[0m in \u001b[0;36mdisplay_simulated_ef_with_random\u001b[0;34m(mean_returns, cov_matrix, num_portfolios, risk_free_rate)\u001b[0m\n\u001b[1;32m     60\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     61\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mdisplay_simulated_ef_with_random\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmean_returns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcov_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_portfolios\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrisk_free_rate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 62\u001b[0;31m   \u001b[0mresults\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrandom_portfolios\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_portfolios\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmean_returns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcov_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrisk_free_rate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     63\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m   \u001b[0mmax_sharpe_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-266-f9dae82c288b>\u001b[0m in \u001b[0;36mrandom_portfolios\u001b[0;34m(num_portfolios, mean_returns, cov_matrix, risk_free_rate)\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0mweights\u001b[0m \u001b[0;34m/=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0mweights_record\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0mportfolio_std_dev\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mportfolio_return\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mportfolio_annualised_performance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmean_returns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcov_matrix\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mportfolio_std_dev\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mportfolio_return\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-266-f9dae82c288b>\u001b[0m in \u001b[0;36mportfolio_annualised_performance\u001b[0;34m(weights, mean_returns, cov_matrix)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mportfolio_annualised_performance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmean_returns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcov_matrix\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0mreturns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmean_returns\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m252\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0mstd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcov_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m252\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mstd\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/numpy/core/overrides.py\u001b[0m in \u001b[0;36mdot\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5886\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5887\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5888\u001b[0;31m     \u001b[0;32mdef\u001b[0m \u001b[0m__getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5889\u001b[0m         \"\"\"\n\u001b[1;32m   5890\u001b[0m         \u001b[0mAfter\u001b[0m \u001b[0mregular\u001b[0m \u001b[0mattribute\u001b[0m \u001b[0maccess\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mtry\u001b[0m \u001b[0mlooking\u001b[0m \u001b[0mup\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["dir_path = \"/content/drive/MyDrive/Project_Group2/\"\n","\n","weights = pd.read_csv(dir_path+\"weights.csv\")\n","weights = weights.iloc[:, 1:]\n","weights = weights.set_index(actual_move_df.index)\n","weights = weights.mul(.01)\n","weights"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"VVLHmYrAG8nU","executionInfo":{"status":"ok","timestamp":1682465094116,"user_tz":240,"elapsed":148,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"470374d4-6ce8-4540-b59c-46e7468a3bb3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              AAPL    MSFT    AMZN    BRKB    NVDA    TSLA    GOOG     XOM  \\\n","date                                                                         \n","2021-04-09  0.0120  0.0309  0.0029  0.0186  0.0157  0.0004  0.0432  0.0469   \n","2021-04-12  0.0292  0.0070  0.0250  0.0250  0.0124  0.0095  0.0022  0.0051   \n","2021-04-13  0.0285  0.0353  0.0059  0.0403  0.0191  0.0008  0.0112  0.0260   \n","2021-04-14  0.0321  0.0167  0.0206  0.0336  0.0169  0.0151  0.0167  0.0065   \n","2021-04-15  0.0431  0.0296  0.0348  0.0119  0.0222  0.0223  0.0298  0.0135   \n","...            ...     ...     ...     ...     ...     ...     ...     ...   \n","2021-12-27  0.0282  0.0135  0.0103  0.0387  0.0174  0.0066  0.0426  0.0176   \n","2021-12-28  0.0007  0.0139  0.0319  0.0416  0.0131  0.0038  0.0044  0.0131   \n","2021-12-29  0.0309  0.0283  0.0028  0.0151  0.0007  0.0164  0.0135  0.0451   \n","2021-12-30  0.0356  0.0031  0.0054  0.0189  0.0106  0.0012  0.0330  0.0244   \n","2021-12-31  0.0372  0.0200  0.0358  0.0208  0.0040  0.0085  0.0405  0.0352   \n","\n","               UNH     JPM  ...     TXN     LIN     NKE    NFLX      PM  \\\n","date                        ...                                           \n","2021-04-09  0.0141  0.0163  ...  0.0465  0.0384  0.0368  0.0448  0.0026   \n","2021-04-12  0.0084  0.0389  ...  0.0393  0.0276  0.0197  0.0109  0.0075   \n","2021-04-13  0.0019  0.0127  ...  0.0419  0.0420  0.0165  0.0011  0.0369   \n","2021-04-14  0.0103  0.0389  ...  0.0241  0.0005  0.0067  0.0214  0.0172   \n","2021-04-15  0.0391  0.0312  ...  0.0346  0.0056  0.0152  0.0224  0.0266   \n","...            ...     ...  ...     ...     ...     ...     ...     ...   \n","2021-12-27  0.0262  0.0075  ...  0.0379  0.0286  0.0049  0.0076  0.0236   \n","2021-12-28  0.0222  0.0047  ...  0.0179  0.0279  0.0258  0.0044  0.0106   \n","2021-12-29  0.0274  0.0191  ...  0.0204  0.0180  0.0189  0.0076  0.0297   \n","2021-12-30  0.0156  0.0114  ...  0.0209  0.0220  0.0073  0.0363  0.0356   \n","2021-12-31  0.0083  0.0330  ...  0.0215  0.0344  0.0126  0.0192  0.0188   \n","\n","               BMY     NEE     RTX    QCOM       T  \n","date                                                \n","2021-04-09  0.0084  0.0025  0.0302  0.0093  0.0484  \n","2021-04-12  0.0019  0.0192  0.0092  0.0291  0.0227  \n","2021-04-13  0.0303  0.0178  0.0175  0.0150  0.0023  \n","2021-04-14  0.0219  0.0004  0.0290  0.0142  0.0244  \n","2021-04-15  0.0036  0.0051  0.0072  0.0070  0.0124  \n","...            ...     ...     ...     ...     ...  \n","2021-12-27  0.0350  0.0321  0.0381  0.0214  0.0035  \n","2021-12-28  0.0177  0.0094  0.0147  0.0365  0.0306  \n","2021-12-29  0.0446  0.0412  0.0050  0.0040  0.0352  \n","2021-12-30  0.0246  0.0155  0.0199  0.0047  0.0221  \n","2021-12-31  0.0146  0.0337  0.0029  0.0086  0.0399  \n","\n","[186 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-5e890873-5016-48b1-ab84-7a0d6fe55d7a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>MSFT</th>\n","      <th>AMZN</th>\n","      <th>BRKB</th>\n","      <th>NVDA</th>\n","      <th>TSLA</th>\n","      <th>GOOG</th>\n","      <th>XOM</th>\n","      <th>UNH</th>\n","      <th>JPM</th>\n","      <th>...</th>\n","      <th>TXN</th>\n","      <th>LIN</th>\n","      <th>NKE</th>\n","      <th>NFLX</th>\n","      <th>PM</th>\n","      <th>BMY</th>\n","      <th>NEE</th>\n","      <th>RTX</th>\n","      <th>QCOM</th>\n","      <th>T</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.0120</td>\n","      <td>0.0309</td>\n","      <td>0.0029</td>\n","      <td>0.0186</td>\n","      <td>0.0157</td>\n","      <td>0.0004</td>\n","      <td>0.0432</td>\n","      <td>0.0469</td>\n","      <td>0.0141</td>\n","      <td>0.0163</td>\n","      <td>...</td>\n","      <td>0.0465</td>\n","      <td>0.0384</td>\n","      <td>0.0368</td>\n","      <td>0.0448</td>\n","      <td>0.0026</td>\n","      <td>0.0084</td>\n","      <td>0.0025</td>\n","      <td>0.0302</td>\n","      <td>0.0093</td>\n","      <td>0.0484</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>0.0292</td>\n","      <td>0.0070</td>\n","      <td>0.0250</td>\n","      <td>0.0250</td>\n","      <td>0.0124</td>\n","      <td>0.0095</td>\n","      <td>0.0022</td>\n","      <td>0.0051</td>\n","      <td>0.0084</td>\n","      <td>0.0389</td>\n","      <td>...</td>\n","      <td>0.0393</td>\n","      <td>0.0276</td>\n","      <td>0.0197</td>\n","      <td>0.0109</td>\n","      <td>0.0075</td>\n","      <td>0.0019</td>\n","      <td>0.0192</td>\n","      <td>0.0092</td>\n","      <td>0.0291</td>\n","      <td>0.0227</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.0285</td>\n","      <td>0.0353</td>\n","      <td>0.0059</td>\n","      <td>0.0403</td>\n","      <td>0.0191</td>\n","      <td>0.0008</td>\n","      <td>0.0112</td>\n","      <td>0.0260</td>\n","      <td>0.0019</td>\n","      <td>0.0127</td>\n","      <td>...</td>\n","      <td>0.0419</td>\n","      <td>0.0420</td>\n","      <td>0.0165</td>\n","      <td>0.0011</td>\n","      <td>0.0369</td>\n","      <td>0.0303</td>\n","      <td>0.0178</td>\n","      <td>0.0175</td>\n","      <td>0.0150</td>\n","      <td>0.0023</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>0.0321</td>\n","      <td>0.0167</td>\n","      <td>0.0206</td>\n","      <td>0.0336</td>\n","      <td>0.0169</td>\n","      <td>0.0151</td>\n","      <td>0.0167</td>\n","      <td>0.0065</td>\n","      <td>0.0103</td>\n","      <td>0.0389</td>\n","      <td>...</td>\n","      <td>0.0241</td>\n","      <td>0.0005</td>\n","      <td>0.0067</td>\n","      <td>0.0214</td>\n","      <td>0.0172</td>\n","      <td>0.0219</td>\n","      <td>0.0004</td>\n","      <td>0.0290</td>\n","      <td>0.0142</td>\n","      <td>0.0244</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.0431</td>\n","      <td>0.0296</td>\n","      <td>0.0348</td>\n","      <td>0.0119</td>\n","      <td>0.0222</td>\n","      <td>0.0223</td>\n","      <td>0.0298</td>\n","      <td>0.0135</td>\n","      <td>0.0391</td>\n","      <td>0.0312</td>\n","      <td>...</td>\n","      <td>0.0346</td>\n","      <td>0.0056</td>\n","      <td>0.0152</td>\n","      <td>0.0224</td>\n","      <td>0.0266</td>\n","      <td>0.0036</td>\n","      <td>0.0051</td>\n","      <td>0.0072</td>\n","      <td>0.0070</td>\n","      <td>0.0124</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.0282</td>\n","      <td>0.0135</td>\n","      <td>0.0103</td>\n","      <td>0.0387</td>\n","      <td>0.0174</td>\n","      <td>0.0066</td>\n","      <td>0.0426</td>\n","      <td>0.0176</td>\n","      <td>0.0262</td>\n","      <td>0.0075</td>\n","      <td>...</td>\n","      <td>0.0379</td>\n","      <td>0.0286</td>\n","      <td>0.0049</td>\n","      <td>0.0076</td>\n","      <td>0.0236</td>\n","      <td>0.0350</td>\n","      <td>0.0321</td>\n","      <td>0.0381</td>\n","      <td>0.0214</td>\n","      <td>0.0035</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>0.0007</td>\n","      <td>0.0139</td>\n","      <td>0.0319</td>\n","      <td>0.0416</td>\n","      <td>0.0131</td>\n","      <td>0.0038</td>\n","      <td>0.0044</td>\n","      <td>0.0131</td>\n","      <td>0.0222</td>\n","      <td>0.0047</td>\n","      <td>...</td>\n","      <td>0.0179</td>\n","      <td>0.0279</td>\n","      <td>0.0258</td>\n","      <td>0.0044</td>\n","      <td>0.0106</td>\n","      <td>0.0177</td>\n","      <td>0.0094</td>\n","      <td>0.0147</td>\n","      <td>0.0365</td>\n","      <td>0.0306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.0309</td>\n","      <td>0.0283</td>\n","      <td>0.0028</td>\n","      <td>0.0151</td>\n","      <td>0.0007</td>\n","      <td>0.0164</td>\n","      <td>0.0135</td>\n","      <td>0.0451</td>\n","      <td>0.0274</td>\n","      <td>0.0191</td>\n","      <td>...</td>\n","      <td>0.0204</td>\n","      <td>0.0180</td>\n","      <td>0.0189</td>\n","      <td>0.0076</td>\n","      <td>0.0297</td>\n","      <td>0.0446</td>\n","      <td>0.0412</td>\n","      <td>0.0050</td>\n","      <td>0.0040</td>\n","      <td>0.0352</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>0.0356</td>\n","      <td>0.0031</td>\n","      <td>0.0054</td>\n","      <td>0.0189</td>\n","      <td>0.0106</td>\n","      <td>0.0012</td>\n","      <td>0.0330</td>\n","      <td>0.0244</td>\n","      <td>0.0156</td>\n","      <td>0.0114</td>\n","      <td>...</td>\n","      <td>0.0209</td>\n","      <td>0.0220</td>\n","      <td>0.0073</td>\n","      <td>0.0363</td>\n","      <td>0.0356</td>\n","      <td>0.0246</td>\n","      <td>0.0155</td>\n","      <td>0.0199</td>\n","      <td>0.0047</td>\n","      <td>0.0221</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>0.0372</td>\n","      <td>0.0200</td>\n","      <td>0.0358</td>\n","      <td>0.0208</td>\n","      <td>0.0040</td>\n","      <td>0.0085</td>\n","      <td>0.0405</td>\n","      <td>0.0352</td>\n","      <td>0.0083</td>\n","      <td>0.0330</td>\n","      <td>...</td>\n","      <td>0.0215</td>\n","      <td>0.0344</td>\n","      <td>0.0126</td>\n","      <td>0.0192</td>\n","      <td>0.0188</td>\n","      <td>0.0146</td>\n","      <td>0.0337</td>\n","      <td>0.0029</td>\n","      <td>0.0086</td>\n","      <td>0.0399</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 49 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e890873-5016-48b1-ab84-7a0d6fe55d7a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5e890873-5016-48b1-ab84-7a0d6fe55d7a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5e890873-5016-48b1-ab84-7a0d6fe55d7a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":304}]},{"cell_type":"code","source":["actual_move_df = pd.DataFrame()\n","for ticker in tickers:\n","  actual_move_df[ticker] = d[ticker]['actual_change']\n","\n","actual_move_df = actual_move_df[-186:]\n","actual_move_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Lxg47CT5rMm8","executionInfo":{"status":"ok","timestamp":1682464801005,"user_tz":240,"elapsed":318,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"0d75a4a2-1d81-46af-936c-851108f3d5b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                AAPL      MSFT      AMZN      BRKB      NVDA      TSLA  \\\n","date                                                                     \n","2021-04-09  0.020252  0.010267  0.022096  0.009487  0.005797 -0.009915   \n","2021-04-12 -0.013233  0.000235  0.002132  0.007218  0.056181  0.036867   \n","2021-04-13  0.024307  0.010082  0.006099 -0.003098  0.030936  0.085957   \n","2021-04-14 -0.017853 -0.011219 -0.019706  0.001610 -0.025670 -0.039472   \n","2021-04-15  0.018708  0.015298  0.013828  0.006018  0.056310  0.009041   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-12-27  0.022975  0.023186 -0.008178  0.007403  0.044028  0.025248   \n","2021-12-28 -0.005767 -0.003504  0.005844  0.005461 -0.020133 -0.005000   \n","2021-12-29  0.000502  0.002051 -0.008555  0.003922 -0.010586 -0.002095   \n","2021-12-30 -0.006578 -0.007691 -0.003289  0.001737 -0.013833 -0.014592   \n","2021-12-31 -0.003535 -0.008841 -0.011429 -0.003267 -0.005915 -0.012669   \n","\n","                GOOG       XOM       UNH       JPM  ...       TXN       LIN  \\\n","date                                                ...                       \n","2021-04-09  0.009022 -0.002321  0.031270  0.007478  ...  0.001178  0.009213   \n","2021-04-12 -0.013601 -0.006622 -0.000053 -0.002112  ... -0.015351  0.002212   \n","2021-04-13  0.005535  0.003784 -0.004731 -0.011927  ... -0.006184  0.003013   \n","2021-04-14 -0.005482  0.028900  0.003017 -0.018690  ... -0.004758 -0.004331   \n","2021-04-15  0.018547 -0.005932  0.038282  0.006349  ...  0.014921  0.010244   \n","...              ...       ...       ...       ...  ...       ...       ...   \n","2021-12-27  0.006263  0.014258  0.008317  0.005723  ...  0.023693  0.012531   \n","2021-12-28 -0.010914 -0.003232  0.006887  0.003035  ... -0.003857  0.001077   \n","2021-12-29  0.000386 -0.008753  0.005249 -0.000504  ... -0.001518  0.004683   \n","2021-12-30 -0.003427 -0.005887 -0.002275 -0.000505  ... -0.007337 -0.003098   \n","2021-12-31 -0.009061  0.006580 -0.004540 -0.000820  ... -0.004963  0.006099   \n","\n","                 NKE      NFLX        PM       BMY       NEE       RTX  \\\n","date                                                                     \n","2021-04-09  0.013241  0.001316  0.018224  0.011307  0.002315  0.010454   \n","2021-04-12  0.008786 -0.004556  0.003514  0.001278 -0.003849  0.005492   \n","2021-04-13 -0.022687  0.001718 -0.006675  0.014197  0.018032 -0.012957   \n","2021-04-14 -0.009585 -0.024759  0.003195  0.003617  0.001139  0.003346   \n","2021-04-15  0.010661  0.017036  0.008345  0.009873  0.013269  0.000128   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-12-27  0.011529 -0.001580  0.006564  0.003868  0.006836  0.004005   \n","2021-12-28 -0.006922 -0.003931  0.003421  0.000963  0.006132  0.009151   \n","2021-12-29  0.014181 -0.000278  0.004688 -0.000962  0.001197 -0.001511   \n","2021-12-30 -0.007643  0.002539 -0.000424  0.003692  0.008479 -0.001048   \n","2021-12-31 -0.004896 -0.015766  0.007851 -0.002719  0.006360  0.003030   \n","\n","                QCOM         T  \n","date                            \n","2021-04-09  0.001639  0.001333  \n","2021-04-12 -0.022267 -0.002663  \n","2021-04-13 -0.001019 -0.011015  \n","2021-04-14 -0.018572  0.003375  \n","2021-04-15  0.022931  0.000673  \n","...              ...       ...  \n","2021-12-27  0.019645 -0.003619  \n","2021-12-28 -0.008104  0.001614  \n","2021-12-29  0.007467 -0.007252  \n","2021-12-30 -0.018636  0.005682  \n","2021-12-31  0.000766 -0.007264  \n","\n","[186 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-2ca672f6-d760-4035-9ce6-2af6714d03f3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>MSFT</th>\n","      <th>AMZN</th>\n","      <th>BRKB</th>\n","      <th>NVDA</th>\n","      <th>TSLA</th>\n","      <th>GOOG</th>\n","      <th>XOM</th>\n","      <th>UNH</th>\n","      <th>JPM</th>\n","      <th>...</th>\n","      <th>TXN</th>\n","      <th>LIN</th>\n","      <th>NKE</th>\n","      <th>NFLX</th>\n","      <th>PM</th>\n","      <th>BMY</th>\n","      <th>NEE</th>\n","      <th>RTX</th>\n","      <th>QCOM</th>\n","      <th>T</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.020252</td>\n","      <td>0.010267</td>\n","      <td>0.022096</td>\n","      <td>0.009487</td>\n","      <td>0.005797</td>\n","      <td>-0.009915</td>\n","      <td>0.009022</td>\n","      <td>-0.002321</td>\n","      <td>0.031270</td>\n","      <td>0.007478</td>\n","      <td>...</td>\n","      <td>0.001178</td>\n","      <td>0.009213</td>\n","      <td>0.013241</td>\n","      <td>0.001316</td>\n","      <td>0.018224</td>\n","      <td>0.011307</td>\n","      <td>0.002315</td>\n","      <td>0.010454</td>\n","      <td>0.001639</td>\n","      <td>0.001333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>-0.013233</td>\n","      <td>0.000235</td>\n","      <td>0.002132</td>\n","      <td>0.007218</td>\n","      <td>0.056181</td>\n","      <td>0.036867</td>\n","      <td>-0.013601</td>\n","      <td>-0.006622</td>\n","      <td>-0.000053</td>\n","      <td>-0.002112</td>\n","      <td>...</td>\n","      <td>-0.015351</td>\n","      <td>0.002212</td>\n","      <td>0.008786</td>\n","      <td>-0.004556</td>\n","      <td>0.003514</td>\n","      <td>0.001278</td>\n","      <td>-0.003849</td>\n","      <td>0.005492</td>\n","      <td>-0.022267</td>\n","      <td>-0.002663</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.024307</td>\n","      <td>0.010082</td>\n","      <td>0.006099</td>\n","      <td>-0.003098</td>\n","      <td>0.030936</td>\n","      <td>0.085957</td>\n","      <td>0.005535</td>\n","      <td>0.003784</td>\n","      <td>-0.004731</td>\n","      <td>-0.011927</td>\n","      <td>...</td>\n","      <td>-0.006184</td>\n","      <td>0.003013</td>\n","      <td>-0.022687</td>\n","      <td>0.001718</td>\n","      <td>-0.006675</td>\n","      <td>0.014197</td>\n","      <td>0.018032</td>\n","      <td>-0.012957</td>\n","      <td>-0.001019</td>\n","      <td>-0.011015</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.017853</td>\n","      <td>-0.011219</td>\n","      <td>-0.019706</td>\n","      <td>0.001610</td>\n","      <td>-0.025670</td>\n","      <td>-0.039472</td>\n","      <td>-0.005482</td>\n","      <td>0.028900</td>\n","      <td>0.003017</td>\n","      <td>-0.018690</td>\n","      <td>...</td>\n","      <td>-0.004758</td>\n","      <td>-0.004331</td>\n","      <td>-0.009585</td>\n","      <td>-0.024759</td>\n","      <td>0.003195</td>\n","      <td>0.003617</td>\n","      <td>0.001139</td>\n","      <td>0.003346</td>\n","      <td>-0.018572</td>\n","      <td>0.003375</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.018708</td>\n","      <td>0.015298</td>\n","      <td>0.013828</td>\n","      <td>0.006018</td>\n","      <td>0.056310</td>\n","      <td>0.009041</td>\n","      <td>0.018547</td>\n","      <td>-0.005932</td>\n","      <td>0.038282</td>\n","      <td>0.006349</td>\n","      <td>...</td>\n","      <td>0.014921</td>\n","      <td>0.010244</td>\n","      <td>0.010661</td>\n","      <td>0.017036</td>\n","      <td>0.008345</td>\n","      <td>0.009873</td>\n","      <td>0.013269</td>\n","      <td>0.000128</td>\n","      <td>0.022931</td>\n","      <td>0.000673</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.022975</td>\n","      <td>0.023186</td>\n","      <td>-0.008178</td>\n","      <td>0.007403</td>\n","      <td>0.044028</td>\n","      <td>0.025248</td>\n","      <td>0.006263</td>\n","      <td>0.014258</td>\n","      <td>0.008317</td>\n","      <td>0.005723</td>\n","      <td>...</td>\n","      <td>0.023693</td>\n","      <td>0.012531</td>\n","      <td>0.011529</td>\n","      <td>-0.001580</td>\n","      <td>0.006564</td>\n","      <td>0.003868</td>\n","      <td>0.006836</td>\n","      <td>0.004005</td>\n","      <td>0.019645</td>\n","      <td>-0.003619</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>-0.005767</td>\n","      <td>-0.003504</td>\n","      <td>0.005844</td>\n","      <td>0.005461</td>\n","      <td>-0.020133</td>\n","      <td>-0.005000</td>\n","      <td>-0.010914</td>\n","      <td>-0.003232</td>\n","      <td>0.006887</td>\n","      <td>0.003035</td>\n","      <td>...</td>\n","      <td>-0.003857</td>\n","      <td>0.001077</td>\n","      <td>-0.006922</td>\n","      <td>-0.003931</td>\n","      <td>0.003421</td>\n","      <td>0.000963</td>\n","      <td>0.006132</td>\n","      <td>0.009151</td>\n","      <td>-0.008104</td>\n","      <td>0.001614</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.000502</td>\n","      <td>0.002051</td>\n","      <td>-0.008555</td>\n","      <td>0.003922</td>\n","      <td>-0.010586</td>\n","      <td>-0.002095</td>\n","      <td>0.000386</td>\n","      <td>-0.008753</td>\n","      <td>0.005249</td>\n","      <td>-0.000504</td>\n","      <td>...</td>\n","      <td>-0.001518</td>\n","      <td>0.004683</td>\n","      <td>0.014181</td>\n","      <td>-0.000278</td>\n","      <td>0.004688</td>\n","      <td>-0.000962</td>\n","      <td>0.001197</td>\n","      <td>-0.001511</td>\n","      <td>0.007467</td>\n","      <td>-0.007252</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.006578</td>\n","      <td>-0.007691</td>\n","      <td>-0.003289</td>\n","      <td>0.001737</td>\n","      <td>-0.013833</td>\n","      <td>-0.014592</td>\n","      <td>-0.003427</td>\n","      <td>-0.005887</td>\n","      <td>-0.002275</td>\n","      <td>-0.000505</td>\n","      <td>...</td>\n","      <td>-0.007337</td>\n","      <td>-0.003098</td>\n","      <td>-0.007643</td>\n","      <td>0.002539</td>\n","      <td>-0.000424</td>\n","      <td>0.003692</td>\n","      <td>0.008479</td>\n","      <td>-0.001048</td>\n","      <td>-0.018636</td>\n","      <td>0.005682</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.003535</td>\n","      <td>-0.008841</td>\n","      <td>-0.011429</td>\n","      <td>-0.003267</td>\n","      <td>-0.005915</td>\n","      <td>-0.012669</td>\n","      <td>-0.009061</td>\n","      <td>0.006580</td>\n","      <td>-0.004540</td>\n","      <td>-0.000820</td>\n","      <td>...</td>\n","      <td>-0.004963</td>\n","      <td>0.006099</td>\n","      <td>-0.004896</td>\n","      <td>-0.015766</td>\n","      <td>0.007851</td>\n","      <td>-0.002719</td>\n","      <td>0.006360</td>\n","      <td>0.003030</td>\n","      <td>0.000766</td>\n","      <td>-0.007264</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 49 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ca672f6-d760-4035-9ce6-2af6714d03f3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2ca672f6-d760-4035-9ce6-2af6714d03f3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2ca672f6-d760-4035-9ce6-2af6714d03f3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":294}]},{"cell_type":"code","source":["weighted_perf = weights.multiply(actual_move_df)\n","weighted_perf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"T2duwTQluE-N","executionInfo":{"status":"ok","timestamp":1682465097403,"user_tz":240,"elapsed":270,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"8148d3c9-b0d7-4fc7-c373-0168bd265d7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                AAPL      MSFT      AMZN      BRKB      NVDA      TSLA  \\\n","date                                                                     \n","2021-04-09  0.000243  0.000317  0.000064  0.000176  0.000091 -0.000004   \n","2021-04-12 -0.000386  0.000002  0.000053  0.000180  0.000697  0.000350   \n","2021-04-13  0.000693  0.000356  0.000036 -0.000125  0.000591  0.000069   \n","2021-04-14 -0.000573 -0.000187 -0.000406  0.000054 -0.000434 -0.000596   \n","2021-04-15  0.000806  0.000453  0.000481  0.000072  0.001250  0.000202   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-12-27  0.000648  0.000313 -0.000084  0.000286  0.000766  0.000167   \n","2021-12-28 -0.000004 -0.000049  0.000186  0.000227 -0.000264 -0.000019   \n","2021-12-29  0.000016  0.000058 -0.000024  0.000059 -0.000007 -0.000034   \n","2021-12-30 -0.000234 -0.000024 -0.000018  0.000033 -0.000147 -0.000018   \n","2021-12-31 -0.000132 -0.000177 -0.000409 -0.000068 -0.000024 -0.000108   \n","\n","                GOOG       XOM           UNH       JPM  ...       TXN  \\\n","date                                                    ...             \n","2021-04-09  0.000390 -0.000109  4.409017e-04  0.000122  ...  0.000055   \n","2021-04-12 -0.000030 -0.000034 -4.462071e-07 -0.000082  ... -0.000603   \n","2021-04-13  0.000062  0.000098 -8.987982e-06 -0.000151  ... -0.000259   \n","2021-04-14 -0.000092  0.000188  3.107891e-05 -0.000727  ... -0.000115   \n","2021-04-15  0.000553 -0.000080  1.496840e-03  0.000198  ...  0.000516   \n","...              ...       ...           ...       ...  ...       ...   \n","2021-12-27  0.000267  0.000251  2.179011e-04  0.000043  ...  0.000898   \n","2021-12-28 -0.000048 -0.000042  1.528890e-04  0.000014  ... -0.000069   \n","2021-12-29  0.000005 -0.000395  1.438254e-04 -0.000010  ... -0.000031   \n","2021-12-30 -0.000113 -0.000144 -3.548381e-05 -0.000006  ... -0.000153   \n","2021-12-31 -0.000367  0.000232 -3.767979e-05 -0.000027  ... -0.000107   \n","\n","                 LIN       NKE      NFLX        PM       BMY           NEE  \\\n","date                                                                         \n","2021-04-09  0.000354  0.000487  0.000059  0.000047  0.000095  5.787047e-06   \n","2021-04-12  0.000061  0.000173 -0.000050  0.000026  0.000002 -7.390375e-05   \n","2021-04-13  0.000127 -0.000374  0.000002 -0.000246  0.000430  3.209689e-04   \n","2021-04-14 -0.000002 -0.000064 -0.000530  0.000055  0.000079  4.554470e-07   \n","2021-04-15  0.000057  0.000162  0.000382  0.000222  0.000036  6.767365e-05   \n","...              ...       ...       ...       ...       ...           ...   \n","2021-12-27  0.000358  0.000056 -0.000012  0.000155  0.000135  2.194277e-04   \n","2021-12-28  0.000030 -0.000179 -0.000017  0.000036  0.000017  5.764320e-05   \n","2021-12-29  0.000084  0.000268 -0.000002  0.000139 -0.000043  4.932548e-05   \n","2021-12-30 -0.000068 -0.000056  0.000092 -0.000015  0.000091  1.314271e-04   \n","2021-12-31  0.000210 -0.000062 -0.000303  0.000148 -0.000040  2.143272e-04   \n","\n","                     RTX      QCOM         T  \n","date                                          \n","2021-04-09  3.157192e-04  0.000015  0.000065  \n","2021-04-12  5.053012e-05 -0.000648 -0.000060  \n","2021-04-13 -2.267540e-04 -0.000015 -0.000025  \n","2021-04-14  9.704070e-05 -0.000264  0.000082  \n","2021-04-15  9.237478e-07  0.000161  0.000008  \n","...                  ...       ...       ...  \n","2021-12-27  1.525779e-04  0.000420 -0.000013  \n","2021-12-28  1.345141e-04 -0.000296  0.000049  \n","2021-12-29 -7.556223e-06  0.000030 -0.000255  \n","2021-12-30 -2.085140e-05 -0.000088  0.000126  \n","2021-12-31  8.787693e-06  0.000007 -0.000290  \n","\n","[186 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-6e7b6c52-0d3f-4d95-b91b-f80653261323\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>MSFT</th>\n","      <th>AMZN</th>\n","      <th>BRKB</th>\n","      <th>NVDA</th>\n","      <th>TSLA</th>\n","      <th>GOOG</th>\n","      <th>XOM</th>\n","      <th>UNH</th>\n","      <th>JPM</th>\n","      <th>...</th>\n","      <th>TXN</th>\n","      <th>LIN</th>\n","      <th>NKE</th>\n","      <th>NFLX</th>\n","      <th>PM</th>\n","      <th>BMY</th>\n","      <th>NEE</th>\n","      <th>RTX</th>\n","      <th>QCOM</th>\n","      <th>T</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.000243</td>\n","      <td>0.000317</td>\n","      <td>0.000064</td>\n","      <td>0.000176</td>\n","      <td>0.000091</td>\n","      <td>-0.000004</td>\n","      <td>0.000390</td>\n","      <td>-0.000109</td>\n","      <td>4.409017e-04</td>\n","      <td>0.000122</td>\n","      <td>...</td>\n","      <td>0.000055</td>\n","      <td>0.000354</td>\n","      <td>0.000487</td>\n","      <td>0.000059</td>\n","      <td>0.000047</td>\n","      <td>0.000095</td>\n","      <td>5.787047e-06</td>\n","      <td>3.157192e-04</td>\n","      <td>0.000015</td>\n","      <td>0.000065</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>-0.000386</td>\n","      <td>0.000002</td>\n","      <td>0.000053</td>\n","      <td>0.000180</td>\n","      <td>0.000697</td>\n","      <td>0.000350</td>\n","      <td>-0.000030</td>\n","      <td>-0.000034</td>\n","      <td>-4.462071e-07</td>\n","      <td>-0.000082</td>\n","      <td>...</td>\n","      <td>-0.000603</td>\n","      <td>0.000061</td>\n","      <td>0.000173</td>\n","      <td>-0.000050</td>\n","      <td>0.000026</td>\n","      <td>0.000002</td>\n","      <td>-7.390375e-05</td>\n","      <td>5.053012e-05</td>\n","      <td>-0.000648</td>\n","      <td>-0.000060</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.000693</td>\n","      <td>0.000356</td>\n","      <td>0.000036</td>\n","      <td>-0.000125</td>\n","      <td>0.000591</td>\n","      <td>0.000069</td>\n","      <td>0.000062</td>\n","      <td>0.000098</td>\n","      <td>-8.987982e-06</td>\n","      <td>-0.000151</td>\n","      <td>...</td>\n","      <td>-0.000259</td>\n","      <td>0.000127</td>\n","      <td>-0.000374</td>\n","      <td>0.000002</td>\n","      <td>-0.000246</td>\n","      <td>0.000430</td>\n","      <td>3.209689e-04</td>\n","      <td>-2.267540e-04</td>\n","      <td>-0.000015</td>\n","      <td>-0.000025</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.000573</td>\n","      <td>-0.000187</td>\n","      <td>-0.000406</td>\n","      <td>0.000054</td>\n","      <td>-0.000434</td>\n","      <td>-0.000596</td>\n","      <td>-0.000092</td>\n","      <td>0.000188</td>\n","      <td>3.107891e-05</td>\n","      <td>-0.000727</td>\n","      <td>...</td>\n","      <td>-0.000115</td>\n","      <td>-0.000002</td>\n","      <td>-0.000064</td>\n","      <td>-0.000530</td>\n","      <td>0.000055</td>\n","      <td>0.000079</td>\n","      <td>4.554470e-07</td>\n","      <td>9.704070e-05</td>\n","      <td>-0.000264</td>\n","      <td>0.000082</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.000806</td>\n","      <td>0.000453</td>\n","      <td>0.000481</td>\n","      <td>0.000072</td>\n","      <td>0.001250</td>\n","      <td>0.000202</td>\n","      <td>0.000553</td>\n","      <td>-0.000080</td>\n","      <td>1.496840e-03</td>\n","      <td>0.000198</td>\n","      <td>...</td>\n","      <td>0.000516</td>\n","      <td>0.000057</td>\n","      <td>0.000162</td>\n","      <td>0.000382</td>\n","      <td>0.000222</td>\n","      <td>0.000036</td>\n","      <td>6.767365e-05</td>\n","      <td>9.237478e-07</td>\n","      <td>0.000161</td>\n","      <td>0.000008</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.000648</td>\n","      <td>0.000313</td>\n","      <td>-0.000084</td>\n","      <td>0.000286</td>\n","      <td>0.000766</td>\n","      <td>0.000167</td>\n","      <td>0.000267</td>\n","      <td>0.000251</td>\n","      <td>2.179011e-04</td>\n","      <td>0.000043</td>\n","      <td>...</td>\n","      <td>0.000898</td>\n","      <td>0.000358</td>\n","      <td>0.000056</td>\n","      <td>-0.000012</td>\n","      <td>0.000155</td>\n","      <td>0.000135</td>\n","      <td>2.194277e-04</td>\n","      <td>1.525779e-04</td>\n","      <td>0.000420</td>\n","      <td>-0.000013</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>-0.000004</td>\n","      <td>-0.000049</td>\n","      <td>0.000186</td>\n","      <td>0.000227</td>\n","      <td>-0.000264</td>\n","      <td>-0.000019</td>\n","      <td>-0.000048</td>\n","      <td>-0.000042</td>\n","      <td>1.528890e-04</td>\n","      <td>0.000014</td>\n","      <td>...</td>\n","      <td>-0.000069</td>\n","      <td>0.000030</td>\n","      <td>-0.000179</td>\n","      <td>-0.000017</td>\n","      <td>0.000036</td>\n","      <td>0.000017</td>\n","      <td>5.764320e-05</td>\n","      <td>1.345141e-04</td>\n","      <td>-0.000296</td>\n","      <td>0.000049</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.000016</td>\n","      <td>0.000058</td>\n","      <td>-0.000024</td>\n","      <td>0.000059</td>\n","      <td>-0.000007</td>\n","      <td>-0.000034</td>\n","      <td>0.000005</td>\n","      <td>-0.000395</td>\n","      <td>1.438254e-04</td>\n","      <td>-0.000010</td>\n","      <td>...</td>\n","      <td>-0.000031</td>\n","      <td>0.000084</td>\n","      <td>0.000268</td>\n","      <td>-0.000002</td>\n","      <td>0.000139</td>\n","      <td>-0.000043</td>\n","      <td>4.932548e-05</td>\n","      <td>-7.556223e-06</td>\n","      <td>0.000030</td>\n","      <td>-0.000255</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.000234</td>\n","      <td>-0.000024</td>\n","      <td>-0.000018</td>\n","      <td>0.000033</td>\n","      <td>-0.000147</td>\n","      <td>-0.000018</td>\n","      <td>-0.000113</td>\n","      <td>-0.000144</td>\n","      <td>-3.548381e-05</td>\n","      <td>-0.000006</td>\n","      <td>...</td>\n","      <td>-0.000153</td>\n","      <td>-0.000068</td>\n","      <td>-0.000056</td>\n","      <td>0.000092</td>\n","      <td>-0.000015</td>\n","      <td>0.000091</td>\n","      <td>1.314271e-04</td>\n","      <td>-2.085140e-05</td>\n","      <td>-0.000088</td>\n","      <td>0.000126</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.000132</td>\n","      <td>-0.000177</td>\n","      <td>-0.000409</td>\n","      <td>-0.000068</td>\n","      <td>-0.000024</td>\n","      <td>-0.000108</td>\n","      <td>-0.000367</td>\n","      <td>0.000232</td>\n","      <td>-3.767979e-05</td>\n","      <td>-0.000027</td>\n","      <td>...</td>\n","      <td>-0.000107</td>\n","      <td>0.000210</td>\n","      <td>-0.000062</td>\n","      <td>-0.000303</td>\n","      <td>0.000148</td>\n","      <td>-0.000040</td>\n","      <td>2.143272e-04</td>\n","      <td>8.787693e-06</td>\n","      <td>0.000007</td>\n","      <td>-0.000290</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 49 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e7b6c52-0d3f-4d95-b91b-f80653261323')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e7b6c52-0d3f-4d95-b91b-f80653261323 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e7b6c52-0d3f-4d95-b91b-f80653261323');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":305}]},{"cell_type":"code","source":["port_performance = pd.DataFrame()\n","port_performance['performance'] = weighted_perf.T.sum()\n","port_performance['value'] = 10000 * (1 + port_performance['performance'][0])\n","port_performance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"QDAQO7douy2Y","executionInfo":{"status":"ok","timestamp":1682465994604,"user_tz":240,"elapsed":176,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"5731d565-2007-4cca-a1fb-59255721f894"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            performance         value\n","date                                 \n","2021-04-09     0.005655  10056.548306\n","2021-04-12     0.000357  10056.548306\n","2021-04-13     0.003193  10056.548306\n","2021-04-14    -0.005522  10056.548306\n","2021-04-15     0.012662  10056.548306\n","...                 ...           ...\n","2021-12-27     0.012515  10056.548306\n","2021-12-28     0.000009  10056.548306\n","2021-12-29     0.001438  10056.548306\n","2021-12-30    -0.001376  10056.548306\n","2021-12-31    -0.001655  10056.548306\n","\n","[186 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-316ac980-6c02-441d-8531-b0e685c05556\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>performance</th>\n","      <th>value</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.005655</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>0.000357</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.003193</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.005522</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.012662</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.012515</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>0.000009</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.001438</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.001376</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.001655</td>\n","      <td>10056.548306</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-316ac980-6c02-441d-8531-b0e685c05556')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-316ac980-6c02-441d-8531-b0e685c05556 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-316ac980-6c02-441d-8531-b0e685c05556');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":336}]},{"cell_type":"code","source":["for i in range(186):\n","  if i == 0:\n","    pass\n","  else:\n","    port_performance['value'][i] = port_performance['value'][i-1] * (1 + port_performance['performance'][i-1])\n","\n","port_performance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"IBNunes2xZRq","executionInfo":{"status":"ok","timestamp":1682466030609,"user_tz":240,"elapsed":356,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"838cd214-8b77-4bfa-871a-18e22056df3b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            performance         value\n","date                                 \n","2021-04-09     0.005655  10056.548306\n","2021-04-12     0.000357  10113.416383\n","2021-04-13     0.003193  10117.029719\n","2021-04-14    -0.005522  10149.337439\n","2021-04-15     0.012662  10093.287831\n","...                 ...           ...\n","2021-12-27     0.012515  11945.051584\n","2021-12-28     0.000009  12094.547973\n","2021-12-29     0.001438  12094.659702\n","2021-12-30    -0.001376  12112.048077\n","2021-12-31    -0.001655  12095.386195\n","\n","[186 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-32739a8b-b62b-47ce-8b39-62f4194ab778\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>performance</th>\n","      <th>value</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.005655</td>\n","      <td>10056.548306</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>0.000357</td>\n","      <td>10113.416383</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.003193</td>\n","      <td>10117.029719</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.005522</td>\n","      <td>10149.337439</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.012662</td>\n","      <td>10093.287831</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.012515</td>\n","      <td>11945.051584</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>0.000009</td>\n","      <td>12094.547973</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.001438</td>\n","      <td>12094.659702</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.001376</td>\n","      <td>12112.048077</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.001655</td>\n","      <td>12095.386195</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32739a8b-b62b-47ce-8b39-62f4194ab778')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-32739a8b-b62b-47ce-8b39-62f4194ab778 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-32739a8b-b62b-47ce-8b39-62f4194ab778');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":338}]},{"cell_type":"code","source":["port_performance['performance'].plot(title='Potfolio Daily Returns')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"80Sj_8x6vgPs","executionInfo":{"status":"ok","timestamp":1682465601443,"user_tz":240,"elapsed":979,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"1a6bfdc8-fa61-4e64-8e85-00c5bc4c3ba8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: title={'center': 'Potfolio Daily Returns'}, xlabel='date'>"]},"metadata":{},"execution_count":316},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["n_bins = 50\n","plt.hist(port_performance['performance'], bins=n_bins)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":716},"id":"e8dtyhgXy9yl","executionInfo":{"status":"ok","timestamp":1682466264708,"user_tz":240,"elapsed":751,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"ce21c617-c9c6-4df5-f9f9-1f436907b72c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1.,  0.,  1.,  2.,  1.,  0.,  0.,  1.,  2.,  0.,  2.,  1.,  1.,\n","         2.,  1.,  3.,  3.,  4., 11.,  7.,  8.,  8.,  7.,  6., 10.,  9.,\n","        15.,  5.,  9.,  7.,  5.,  9.,  5.,  7.,  5.,  6.,  4.,  7.,  4.,\n","         2.,  2.,  1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  1.]),\n"," array([-0.01954503, -0.01875076, -0.0179565 , -0.01716223, -0.01636797,\n","        -0.0155737 , -0.01477944, -0.01398518, -0.01319091, -0.01239665,\n","        -0.01160238, -0.01080812, -0.01001386, -0.00921959, -0.00842533,\n","        -0.00763106, -0.0068368 , -0.00604253, -0.00524827, -0.00445401,\n","        -0.00365974, -0.00286548, -0.00207121, -0.00127695, -0.00048268,\n","         0.00031158,  0.00110584,  0.00190011,  0.00269437,  0.00348864,\n","         0.0042829 ,  0.00507716,  0.00587143,  0.00666569,  0.00745996,\n","         0.00825422,  0.00904849,  0.00984275,  0.01063701,  0.01143128,\n","         0.01222554,  0.01301981,  0.01381407,  0.01460834,  0.0154026 ,\n","         0.01619686,  0.01699113,  0.01778539,  0.01857966,  0.01937392,\n","         0.02016818]),\n"," <BarContainer object of 50 artists>)"]},"metadata":{},"execution_count":345},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["port_performance['value'].plot(title='Potfolio Value')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"Jw2TdVu2w22k","executionInfo":{"status":"ok","timestamp":1682466300981,"user_tz":240,"elapsed":1017,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"7b3c63d2-cbec-4673-fc2a-dffb0efebb60"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: title={'center': 'Potfolio Value'}, xlabel='date'>"]},"metadata":{},"execution_count":347},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df = yf.download(\"XLG\", period = '1d', start = '2021-04-08', end = '2022-01-01', interval = \"1d\")\n","\n","spytop50 = pd.DataFrame()\n","spytop50['change'] = df['Adj Close'].pct_change(periods=1)\n","spytop50.set_index(df.index)\n","spytop50 = spytop50[1:]\n","\n","spytop50['value'] = 10000 * (1 + spytop50['change'][0])\n","\n","for i in range(186):\n","  if i == 0:\n","    pass\n","  else:\n","    spytop50['value'][i] = spytop50['value'][i-1] * (1 + spytop50['change'][i-1])\n","\n","\n","spytop50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"ROGARmOyyxev","executionInfo":{"status":"ok","timestamp":1682467016405,"user_tz":240,"elapsed":474,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"cbf5ac2e-8f54-45ca-af61-b8494b0aa89b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"execute_result","data":{"text/plain":["              change         value\n","Date                              \n","2021-04-09  0.009798  10097.977708\n","2021-04-12 -0.001575  10196.915378\n","2021-04-13  0.004215  10180.860201\n","2021-04-14 -0.007274  10223.776788\n","2021-04-15  0.013073  10149.410431\n","...              ...           ...\n","2021-12-27  0.014080  12116.052781\n","2021-12-28 -0.002332  12286.641978\n","2021-12-29  0.000054  12257.990760\n","2021-12-30 -0.003277  12258.649303\n","2021-12-31 -0.005202  12218.472051\n","\n","[186 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-e63b5265-fa51-46f5-92b1-45cd5cf1ccfc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>change</th>\n","      <th>value</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.009798</td>\n","      <td>10097.977708</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>-0.001575</td>\n","      <td>10196.915378</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.004215</td>\n","      <td>10180.860201</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.007274</td>\n","      <td>10223.776788</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.013073</td>\n","      <td>10149.410431</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.014080</td>\n","      <td>12116.052781</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>-0.002332</td>\n","      <td>12286.641978</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.000054</td>\n","      <td>12257.990760</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.003277</td>\n","      <td>12258.649303</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.005202</td>\n","      <td>12218.472051</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e63b5265-fa51-46f5-92b1-45cd5cf1ccfc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e63b5265-fa51-46f5-92b1-45cd5cf1ccfc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e63b5265-fa51-46f5-92b1-45cd5cf1ccfc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":371}]},{"cell_type":"code","source":["df = yf.download(\"SPY\", period = '1d', start = '2021-04-08', end = '2022-01-01', interval = \"1d\")\n","\n","spy = pd.DataFrame()\n","spy['change'] = df['Adj Close'].pct_change(periods=1)\n","spy.set_index(df.index)\n","spy = spy[1:]\n","\n","spy['value'] = 10000 * (1 + spy['change'][0])\n","\n","for i in range(186):\n","  if i == 0:\n","    pass\n","  else:\n","    spy['value'][i] = spy['value'][i-1] * (1 + spy['change'][i-1])\n","\n","\n","spy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"4G35C91d3IZy","executionInfo":{"status":"ok","timestamp":1682469084356,"user_tz":240,"elapsed":599,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"de14abc7-8149-444e-e150-f60b39212c36"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"execute_result","data":{"text/plain":["              change         value\n","Date                              \n","2021-04-09  0.007270  10072.700250\n","2021-04-12  0.000365  10145.929032\n","2021-04-13  0.002964  10149.628654\n","2021-04-14 -0.003415  10179.708624\n","2021-04-15  0.010743  10144.944431\n","...              ...           ...\n","2021-12-27  0.014152  11719.666001\n","2021-12-28 -0.000817  11885.524096\n","2021-12-29  0.001279  11875.812202\n","2021-12-30 -0.002765  11891.004529\n","2021-12-31 -0.002520  11858.129686\n","\n","[186 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7944788e-4ac3-4f67-9930-081d189d4f64\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>change</th>\n","      <th>value</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>0.007270</td>\n","      <td>10072.700250</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>0.000365</td>\n","      <td>10145.929032</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>0.002964</td>\n","      <td>10149.628654</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>-0.003415</td>\n","      <td>10179.708624</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>0.010743</td>\n","      <td>10144.944431</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.014152</td>\n","      <td>11719.666001</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>-0.000817</td>\n","      <td>11885.524096</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>0.001279</td>\n","      <td>11875.812202</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>-0.002765</td>\n","      <td>11891.004529</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>-0.002520</td>\n","      <td>11858.129686</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7944788e-4ac3-4f67-9930-081d189d4f64')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7944788e-4ac3-4f67-9930-081d189d4f64 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7944788e-4ac3-4f67-9930-081d189d4f64');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":422}]},{"cell_type":"code","source":["performance_compare = pd.DataFrame()\n","\n","performance_compare['port'] = port_performance['value']\n","performance_compare['spy50'] = spytop50['value']\n","performance_compare['spy'] = spy['value']\n","\n","performance_compare"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"t2DK1O7199Ot","executionInfo":{"status":"ok","timestamp":1682469108952,"user_tz":240,"elapsed":194,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"89b8f4e6-879d-4db6-adac-f494978b2344"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    port         spy50           spy\n","date                                                \n","2021-04-09  10056.548306  10097.977708  10072.700250\n","2021-04-12  10113.416383  10196.915378  10145.929032\n","2021-04-13  10117.029719  10180.860201  10149.628654\n","2021-04-14  10149.337439  10223.776788  10179.708624\n","2021-04-15  10093.287831  10149.410431  10144.944431\n","...                  ...           ...           ...\n","2021-12-27  11945.051584  12116.052781  11719.666001\n","2021-12-28  12094.547973  12286.641978  11885.524096\n","2021-12-29  12094.659702  12257.990760  11875.812202\n","2021-12-30  12112.048077  12258.649303  11891.004529\n","2021-12-31  12095.386195  12218.472051  11858.129686\n","\n","[186 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-76824c09-7582-45a0-ad5e-4db5e1aaf294\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>port</th>\n","      <th>spy50</th>\n","      <th>spy</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-09</th>\n","      <td>10056.548306</td>\n","      <td>10097.977708</td>\n","      <td>10072.700250</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-12</th>\n","      <td>10113.416383</td>\n","      <td>10196.915378</td>\n","      <td>10145.929032</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-13</th>\n","      <td>10117.029719</td>\n","      <td>10180.860201</td>\n","      <td>10149.628654</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14</th>\n","      <td>10149.337439</td>\n","      <td>10223.776788</td>\n","      <td>10179.708624</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15</th>\n","      <td>10093.287831</td>\n","      <td>10149.410431</td>\n","      <td>10144.944431</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>11945.051584</td>\n","      <td>12116.052781</td>\n","      <td>11719.666001</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>12094.547973</td>\n","      <td>12286.641978</td>\n","      <td>11885.524096</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-29</th>\n","      <td>12094.659702</td>\n","      <td>12257.990760</td>\n","      <td>11875.812202</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-30</th>\n","      <td>12112.048077</td>\n","      <td>12258.649303</td>\n","      <td>11891.004529</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>12095.386195</td>\n","      <td>12218.472051</td>\n","      <td>11858.129686</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76824c09-7582-45a0-ad5e-4db5e1aaf294')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-76824c09-7582-45a0-ad5e-4db5e1aaf294 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-76824c09-7582-45a0-ad5e-4db5e1aaf294');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":423}]},{"cell_type":"code","source":["import matplotlib.dates as mdates\n","fig, ax = plt.subplots(figsize=(8, 6))\n","ax.plot(performance_compare.index, performance_compare);\n","\n","month_locator = mdates.MonthLocator(interval=1)\n","ax.xaxis.set_major_locator(month_locator)\n","fig.autofmt_xdate()\n","\n","plt.title('Performance of Portfolio vs S&P Top 50 vs S&P 500')\n","plt.ylabel('Growth of $10,000')\n","ax.legend(['Portfolio', 'S&P Top 50', 'S&P 500'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"i7iBdVAN2_n_","executionInfo":{"status":"ok","timestamp":1682469131003,"user_tz":240,"elapsed":1351,"user":{"displayName":"Alexander Cole","userId":"00786896978418234667"}},"outputId":"2a274e0a-7e86-4366-c68c-d5a12148910a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f0cb07d7130>"]},"metadata":{},"execution_count":425},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dir_path = \"/content/drive/MyDrive/Project_Group2/\"\n","\n","performance_compare.to_csv(dir_path+\"performance_compare.csv\")"],"metadata":{"id":"-o_AnbN-6aoS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"wDJKoPLxIzdx"},"execution_count":null,"outputs":[]}]}